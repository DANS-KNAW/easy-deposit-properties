mutation RegisterDeposit {
    registerDeposit(input: {
        clientMutationId: "foobar",
        depositId: "00000000-0000-0000-0000-000000000006",
        depositProperties: """bag-store.bag-name = bag
        creation.timestamp = 2019-01-01T00:00:00.000Z
        depositor.userId = user001
        deposit.origin = SWORD2
        state.label = SUBMITTED
        state.description = my description
        deposit.ingest.current-step = BAGSTORE
        identifier.doi = my-doi-value
        identifier.urn = my-urn-value
        identifier.fedora = my-fedora-value
        bag-store.bag-id = my-bag-store-value
        identifier.dans-doi.registered = yes
        identifier.dans-doi.action = update
        curation.datamanager.userId = archie001
        curation.datamanager.email = does.not.exists@dans.knaw.nl
        curation.is-new-version = yes
        curation.required = no
        curation.performed = no
        springfield.domain = domain
        springfield.user = user
        springfield.collection = collection
        springfield.playmode = continuous
        easy-sword2.client-message.content-type = application/zip"""}) {
        clientMutationId
        deposit {
            depositId
            bagName
            creationTimestamp
            lastModified
            depositor {
                depositorId
            }
            origin
            states {
                edges {
                    node {
                        label
                        description
                        timestamp
                    }
                }
            }
            ingestSteps {
                edges {
                    node {
                        step
                        timestamp
                    }
                }
            }
            identifiers {
                type
                value
                timestamp
            }
            doiRegistered
            doiRegisteredEvents {
                value
                timestamp
            }
            doiAction
            doiActionEvents {
                value
                timestamp
            }
            curators {
                edges {
                    node {
                        userId
                        email
                        timestamp
                    }
                }
            }
            isNewVersion
            isNewVersionEvents {
                value
                timestamp
            }
            curationRequired
            curationRequiredEvents {
                value
                timestamp
            }
            curationPerformed
            curationPerformedEvents {
                value
                timestamp
            }
            springfields {
                domain
                user
                collection
                playmode
                timestamp
            }
            contentTypes {
                value
                timestamp
            }
        }
    }
}
